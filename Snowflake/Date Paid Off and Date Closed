SELECT 
    NOTE.NOTE_NUMBER AS ACCOUNT_NUMBER, 
    NOTE.RESP_CODE, 
    NOTE.PRIMARY_NAME_ID,
    NOTE.DATE_PAID_OFF AS DATE_CLOSED,
    NOTE.PRODUCT_DESCRIPTION AS PRODUCT_DESCRIPTION,
    'NOTE' AS ACCOUNT_TYPE,
    NOTE_BALANCE.NET_CURR_BOOK_BALANCE AS CURRENT_BALANCE,
    NOTE_BALANCE.CYTD_AVERAGE_BALANCE AS YTD_AVG_BALANCE
FROM S_PRD_FISERV_PREMIER.REFINED.NOTE_ACCT AS NOTE
JOIN p_prd_commercial_lending.consumption.dim_commercial_roster AS ROSTER
    ON NOTE.RESP_CODE = ROSTER.RESP_CODE
LEFT JOIN S_PRD_FISERV_PREMIER.REFINED.NOTE_ACCT AS NOTE_BALANCE
    ON NOTE.NOTE_NUMBER = NOTE_BALANCE.NOTE_NUMBER
    AND NOTE.DATE_PAID_OFF = NOTE_BALANCE.DATE_LAST_UPDATED  -- Ensuring we get the balance at the closing date
WHERE NOTE.DATE_PAID_OFF > '2023-12-31'
AND NOTE.DATE_PAID_OFF IS NOT NULL
AND NOTE.DATE_LAST_UPDATED =  (SELECT MAX(DATE_LAST_UPDATED) 
                               FROM S_PRD_FISERV_PREMIER.REFINED.NOTE_ACCT)
AND NOTE.ACTIVE_NOTE != 'Y'
AND NOTE.PERCENT_PARTICIPATED = '0'
AND NOTE.EMPLOYEE_OFFICER_DIRECTOR = '0'  

UNION ALL
                               

SELECT 
    DDA.DDA_ACCOUNT AS ACCOUNT_NUMBER, 
    DDA.RESP_CODE, 
    DDA.PRIMARY_NAME_ID, 
    DDA.DATE_CLOSED AS DATE_CLOSED,
    DDA.PRODUCT_DESCRIPTION AS PRODUCT_DESCRIPTION,
    'DDA' AS ACCOUNT_TYPE,
    DDA_BALANCE.CURRENT_BALANCE AS CURRENT_BALANCE,
    DDA_BALANCE.CYTD_AVERAGE_BALANCE AS YTD_AVG_BALANCE
FROM S_PRD_FISERV_PREMIER.REFINED.DDA_ACCT AS DDA
JOIN p_prd_commercial_lending.consumption.dim_commercial_roster AS ROSTER
    ON DDA.RESP_CODE = ROSTER.RESP_CODE
LEFT JOIN S_PRD_FISERV_PREMIER.REFINED.DDA_ACCT AS DDA_BALANCE
    ON DDA.DDA_ACCOUNT = DDA_BALANCE.DDA_ACCOUNT
    AND DDA.DATE_CLOSED = DDA_BALANCE.DATE_LAST_UPDATED  -- Ensuring we get the balance at the closing date
WHERE DDA.DATE_CLOSED > '2023-12-31'
AND DDA.DATE_CLOSED IS NOT NULL
AND DDA.DATE_LAST_UPDATED =  (SELECT MAX(DATE_LAST_UPDATED) 
                               FROM S_PRD_FISERV_PREMIER.REFINED.DDA_ACCT)
AND DDA.CLOSED_ACCT_FLAG != '0' 

  UNION ALL
  
 SELECT 
    SAV.SAV_ACCOUNT AS ACCOUNT_NUMBER, 
    SAV.RESP_CODE, 
    SAV.PRIMARY_NAME_ID, 
    SAV.DATE_CLOSED AS DATE_CLOSED,
    SAV.PRODUCT_DESCRIPTION AS PRODUCT_DESCRIPTION,
    'SAV' AS ACCOUNT_TYPE,
    SAV_BALANCE.CURRENT_BALANCE AS CURRENT_BALANCE,
    SAV_BALANCE.CYTD_AVERAGE_BALANCE AS YTD_AVG_BALANCE
FROM S_PRD_FISERV_PREMIER.REFINED.SAV_ACCT AS SAV
JOIN p_prd_commercial_lending.consumption.dim_commercial_roster AS ROSTER
    ON SAV.RESP_CODE = ROSTER.RESP_CODE
LEFT JOIN S_PRD_FISERV_PREMIER.REFINED.SAV_ACCT AS SAV_BALANCE
    ON SAV.SAV_ACCOUNT = SAV_BALANCE.SAV_ACCOUNT
    AND SAV.DATE_CLOSED = SAV_BALANCE.DATE_LAST_UPDATED  -- Ensuring we get the balance at the closing date
WHERE SAV.DATE_CLOSED > '2023-12-31'
AND SAV.DATE_CLOSED IS NOT NULL
AND SAV.DATE_LAST_UPDATED =  (SELECT MAX(DATE_LAST_UPDATED) 
                               FROM S_PRD_FISERV_PREMIER.REFINED.SAV_ACCT)   
AND SAV.CLOSED_ACCT_FLAG != '0'                             
                               
 UNION ALL
 
SELECT 
    COD.COD_ACCOUNT AS ACCOUNT_NUMBER, 
    COD.RESP_CODE, 
    COD.PRIMARY_NAME_ID, 
    COD.DATE_CLOSED AS DATE_CLOSED, 
    COD.PRODUCT_DESCRIPTION AS PRODUCT_DESCRIPTION,
    'COD' AS ACCOUNT_TYPE,
    COD_BALANCE.CURRENT_BALANCE AS CURRENT_BALANCE,
    COD_BALANCE.CYTD_AVERAGE_BALANCE AS YTD_AVG_BALANCE
FROM S_PRD_FISERV_PREMIER.REFINED.COD_ACCT AS COD
JOIN p_prd_commercial_lending.consumption.dim_commercial_roster AS ROSTER
    ON COD.RESP_CODE = ROSTER.RESP_CODE
LEFT JOIN S_PRD_FISERV_PREMIER.REFINED.COD_ACCT AS COD_BALANCE
    ON COD.COD_ACCOUNT = COD_BALANCE.COD_ACCOUNT
    AND COD.DATE_CLOSED = COD_BALANCE.DATE_LAST_UPDATED  -- Ensuring we get the balance at the closing date
WHERE COD.DATE_CLOSED > '2023-12-31'
AND COD.DATE_CLOSED IS NOT NULL
AND COD.DATE_LAST_UPDATED =  (SELECT MAX(DATE_LAST_UPDATED) 
                               FROM S_PRD_FISERV_PREMIER.REFINED.COD_ACCT)     
AND COD.CLOSED_ACCT_FLAG != '0' 
                              
ORDER BY DATE_CLOSED DESC
